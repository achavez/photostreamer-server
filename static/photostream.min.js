var socket=Backbone.io.connect();socket.on("connect",function(){$(".disconnected").addClass("hidden"),$(".connected").removeClass("hidden")}),socket.on("disconnect",function(){$(".disconnected").removeClass("hidden"),$(".connected").addClass("hidden"),new PNotify({title:"Server connection lost",text:"New photos won't show and you won't be able to request photos until you're reconnected.",type:"error",icon:"glyphicon glyphicon-remove-circle",desktop:{desktop:!0}})}),socket.on("reconnect",function(){window.photos.fetch(),new PNotify({title:"Server connection restored",text:"Everything should be back to normal.",type:"success",icon:"glyphicon glyphicon-ok-circle",desktop:{desktop:!0}})});var Photo=Backbone.Model.extend({idAttribute:"_id",request:function(){this.save("requested",!0,{wait:!0})}}),Photos=Backbone.Collection.extend({model:Photo,backend:"photos",initialize:function(){this.bindBackend(),this.on("change",function(a){var b=this.get(a);b.trigger("sync"),a.hasChanged("full")&&new PNotify({title:"New download",text:a.get("fileid")+" available for download.",icon:"glyphicon glyphicon-download-alt",desktop:{desktop:!0}})})},comparator:function(a){var b=a.get("created");return-moment(b).unix()}}),PhotoView=Backbone.View.extend({initialize:function(){this.template=Templates.photo,this.model.on("sync",function(){this.render()},this)},className:"photo col-xs-12 col-sm-6 col-md-4 col-lg-3",events:{"click .request-full":"request","click .inspect":"inspect"},request:function(){this.model.request()},inspect:function(){window.inspectorView=new InspectorView({model:this.model}),window.inspectorView.render()},render:function(){return this.$el.html(this.template(this.model.toJSON())),this}}),InspectorView=Backbone.View.extend({initialize:function(){this.template=Templates.inspector,this.model.on("sync",function(){this.render()},this)},events:{"click .request-full":"request"},request:function(){this.model.request()},render:function(){this.$el.html(this.template(this.model.toJSON())),$("#inspector").html(this.el)}}),PhotostreamView=Backbone.View.extend({initialize:function(){this.collection.on("add",function(a){var b=this.renderSingle(a);this.$el.prepend(b),fixHeights(!0)},this)},render:function(){return this.collection.forEach(function(a){var b=this.renderSingle(a);this.$el.append(b)},this),this},renderSingle:function(a){var b=new PhotoView({model:a});return b.render().el}}),DownloadsView=Backbone.View.extend({initialize:function(){$("#downloads-template").html();this.template=Templates.download,this.setElement(this.el),this.render(),this.collection.on("add",function(a){this.addSingle(a)},this),this.collection.on("change",function(a){a.hasChanged("full")?this.addSingle(a):a.hasChanged("downloaded")&&this.render()},this)},addSingle:function(a){var b=this.renderSingle(a);this.$el.prepend(b)},renderSingle:function(a){return this.template(a.toJSON())},render:function(){this.$el.html(""),this.collection.forEach(function(a){a.get("full")&&this.$el.append(this.renderSingle(a))},this)}}),fixHeights=function(a){var b,c=0,d=0,e=[],f=$("#photos .photo");f.imagesLoaded(function(){a&&f.height("auto"),f.each(function(){if(b=$(this),topPostion=b.position().top,d!=topPostion){for(currentDiv=0;currentDiv<e.length;currentDiv++)e[currentDiv].height(c);e.length=0,d=topPostion,c=b.height(),e.push(b)}else e.push(b),c=c<b.height()?b.height():c;for(currentDiv=0;currentDiv<e.length;currentDiv++)e[currentDiv].height(c)})})};$(function(){window.photos=new Photos,window.photos.fetch({success:function(){var a=new PhotostreamView({collection:photos});$("#photos").append(a.render().el),fixHeights(!1);new DownloadsView({collection:photos,el:$("#downloads")})}}),$(window).resize(_.debounce(function(){fixHeights(!0)},500));var a=$("#enable-notifications");PNotify.desktop.checkPermission()?a.click(function(){PNotify.desktop.permission(),this.remove()}):a.remove()});
//# sourceMappingURL=photostream.min.map